class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        for(int num:nums)
            mp[num]++;

        auto cmp = [](pair<int,int>& a,pair<int,int>& b){
            return a.second>b.second;
        };
        priority_queue<pair<int,int> , vector<pair<int,int>> ,decltype(cmp)> minheap(cmp);

        for(auto& entry:mp){
            minheap.push(entry);
            if(minheap.size()>k){
                minheap.pop();
            }
        }
        vector<int> ans;
        while(!minheap.empty()){
            ans.push_back(minheap.top().first);
            minheap.pop();
        }
        return ans;
    }
};
