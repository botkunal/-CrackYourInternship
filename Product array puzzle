//time complezity O(n)
//User function template for C++

class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       vector<long long int> pre(n),post(n);
       pre[0]=1;
       post[n-1]=1;
       for(int i=1;i<n;i++)
       pre[i]=pre[i-1]*nums[i-1];
       for(int i=n-2;i>=0;i--)
       post[i]=post[i+1]*nums[i+1];
       for(int i=0;i<n;i++)
       nums[i]=pre[i]*post[i];
       return nums;
        //code here        
    }
};

//time complexity O(n2) (brute force)
class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        //code here 
        vector<long long int> ans(n,1);
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(j==i){
                    continue;
                }else{
                    ans[i]*=nums[j];
                }
            }
        }
        return ans;
    }
};
