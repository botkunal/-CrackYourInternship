class Solution {
public:
    void backTrack(vector<string>& result,string current,int open,int close,int max){
        if(current.length()==2*max){
            result.push_back(current);
            return ;
        }
        if(open<max){
            backTrack(result,current+"(",open+1,close,max);
        }
        if(close<open){
            backTrack(result,current+")",open,close+1,max);
        }
    }
    vector<string> generateParenthesis(int n) {
        vector<string> ans;
        backTrack(ans,"",0,0,n);
        return ans;
    }
};
