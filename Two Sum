// brute force with time complexity O(n2)
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int ans=0;
        for(int i=0;i<nums.size();i++){
            for(int j=i+1;j<nums.size();j++){
                if(nums[j]==target-nums[i]){
                    return {i,j};
                }
            }
        }
        return {};
    }
};



// using hash table time reduce to O(n)
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        unordered_map<int,int> mp;
        for(int i=0;i<nums.size();i++){
            int temp=target-nums[i];
            if(nums.find(temp)!=nums.end()){
                return {mp[temp],i};
            }
            mp[nums[i]]=i;
        }
        return {};
    }
};
