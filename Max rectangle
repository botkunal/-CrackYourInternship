class Solution{
  public:
    int hist(vector<int>& heights){
        stack<int> st;
        heights.push_back(0);
        int maxAreais=0;
        
        for(int i=0;i<heights.size();i++){
            while(!st.empty() && heights[st.top()]>heights[i]){
                int height = heights[st.top()];
                st.pop();
                int width = st.empty() ? i : i-st.top()-1;
                maxAreais=max(maxAreais,height*width);
            }
            st.push(i);
        }
        return maxAreais;
    }
    int maxArea(int M[MAX][MAX], int n, int m) {
        // Your code here
        //if(M.empty()) return 0;
        int maxAreais=0;
        vector<int> heights(m,0);
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                heights[j] = M[i][j] ==0 ? 0 : heights[j]+1;
            }
            maxAreais = max(maxAreais,hist(heights));
        }
        return maxAreais;
    }
};
