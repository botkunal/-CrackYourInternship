class Solution {
public:
    vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {
        unordered_map<int,vector<int>> mp;
        vector<int> ans;
        for(const vector<int>& pair:adjacentPairs){
            mp[pair[0]].push_back(pair[1]);
            mp[pair[1]].push_back(pair[0]);
        }
        for(const auto&[num ,adjs]:mp){
            if(adjs.size()==1){
                ans.push_back(num);
                ans.push_back(adjs[0]);
                break;
            }
        }
        while(ans.size()<adjacentPairs.size()+1){
            const int tail = ans.back();
            const int prew = ans[ans.size()-2];
            const vector<int>& adjs = mp[tail];
            if(adjs[0]==prew)
                ans.push_back(adjs[1]);
            else
                ans.push_back(adjs[0]);
        }
        return ans;
    }
};
