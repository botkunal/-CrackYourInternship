class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        ranges::sort(nums);

        for(int i=0;i<nums.size();i++){
            if(i>0 && nums[i]==nums[i-1]) continue;  // eleminate duplicates

            int target = -nums[i];
            int left = i+1;
            int right = nums.size()-1;

            while(left<right){
                int sum = nums[left] + nums[right];

                if(sum==target){
                    ans.push_back({nums[i],nums[left],nums[right]});
                    while(left<right && nums[left]==nums[left+1]) ++left;      // skip 2nd duplicate
                    while(left<right && nums[right]==nums[right-1]) --right;   // skip 3rd duplicate
                    ++left;
                    --right;
                }
                else if(sum<target){
                    ++left;
                }else{
                    right--;
                }
            }
        }
        return ans;
    }
};
