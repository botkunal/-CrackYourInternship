//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends


class Solution 
{
    public:
    //Function to find the minimum number of swaps required to sort the array. 
	int minSwaps(vector<int>&nums)
	{
	    // Code here
	    int n=nums.size();
	    vector<pair<int,int>> arrpos(n);
	    for(int i=0;i<n;i++){
	        arrpos[i]={nums[i],i};
	    }
	    
	    sort(arrpos.begin(),arrpos.end());
	    
	    vector<bool> visited(n,false);
	    
	    int swaps=0;
	    
	    for(int i=0;i<n;i++){
	        if(visited[i] || arrpos[i].second==1){
	            continue;
	        }
	        
	        int cyclesize=0;
	        int j=i;
	        
	        while(!visited[j]){
	            visited[j]=true;
	            j=arrpos[j].second;
	            cyclesize++;
	        }
	        if(cyclesize>1){
	            swaps+=(cyclesize-1);
	        }
	    }
	   return swaps;
	}
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}
// } Driver Code Ends
